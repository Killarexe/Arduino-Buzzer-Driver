#define MUSIC_SIZE (112 - 6) * 4

#include "driver.h"
#include "Polytone.h"

const uint16_t sound_data[MUSIC_SIZE] = {
  0x0300, 0x4300, 0x7300, 0xB300,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0x1300, 0x5300, 0x8300, 0x0400,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0x2300, 0x6300, 0x9300, 0x1400,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0x3300, 0x7300, 0xA300, 0x2400,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0x0300, 0x4300, 0x7300, 0xB300,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0x1300, 0x5300, 0x8300, 0x0400,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0x2300, 0x6300, 0x9300, 0x1400,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0x3300, 0x7300, 0xA300, 0x2400,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0x0300, 0x4300, 0x7300, 0xB300,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0x1300, 0x5300, 0x8300, 0x0400,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0x2300, 0x6300, 0x9300, 0x1400,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0x3300, 0x7300, 0xA300, 0x2400,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0x0300, 0x4300, 0x7300, 0xB300,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0x1300, 0x5300, 0x8300, 0x0400,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0x2300, 0x6300, 0x9300, 0x1400,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0x3300, 0x7300, 0xA300, 0x2400,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xD000, 0xD000, 0xD000, 0xD000,
  0x3300, 0x7300, 0xA300, 0x2400,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0x2300, 0x6300, 0x9300, 0x1400,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
  0xC000, 0xC000, 0xC000, 0xC000,
};

Polytone polytone;

void setup() {
  if ((MUSIC_SIZE % 4) != 0 ){
    exit(0);
  }
  #if DEBUG_MODE
    Serial.begin(9600);
  #endif
  polytone.begin();
  polytone.setPins(4, 5, 6, 7);
}

void loop() {
  play_buzzer(&polytone, sound_data, 120, MUSIC_SIZE);
}
